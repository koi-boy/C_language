平台： 64位 redhat6，vim,gcc(make)

Debian ubuntu rehat5



Hello.c:

编译器gcc:



Man gcc

Man 3 exit



C源文件——>可执行文件：

C源文件 -> 预处理 -> 编译 -> 汇编 -> 链接 -> 可执行文件



Gcc -E gello.c

#开有 预处理解决

Gcc -E hello.c > hello.i



预处理 gcc -E  hello.c ->hello.i

编译 gcc -S hello.s  ->hello.i

汇编 gcc -c hello.i -> hello.o

执行 gcc hello.o -o hello

./hello

Gcc hello.c     a.out

Gcc hello.c -o myhello



Make hello


C课程思路：
	1.基本概念
	2.数据类型，运算符和表达式
	3.输入输出专题
	4.流程控制
	5.数组
	6.指针
	7.函数
	8.构造类型
	9.动态内存管理
	10.调试工具和调用技巧(gdb,make）
	11.常用库函数


								一、基本概念 

1、以helloworld为例对写程序的思路提出如下要求：
	1) 头文件正确包含的重要性
	2) 以函数为单位来进行程序编写
	3) 声明部分 + 实现部分
	4) return0;
	5) 多用空格空行
	6) 添加注释

2、算法：解决问题的方法。（流程图、NS图、有限状态机FSM）

3、程序：用某种语言实现算法

4、进程

5、防止写越界，防止内存泄漏，谁打开谁关闭，谁申请谁释放。

								
								二、 数据类型，运算符和表达式

1、数据类型：（基本数据类型，参考图片C语言数据结构.png）
	参考图片基本数据类型：


	基本类型：	数值类型： 整形 -> 短整形short，整形int，长整形long
						   浮点形 -> 单精度型 float，双精度型 double
				字符类型： char


	构造类型：	数组
				结构体 struct
				共用体 union
				枚举类型 enum
	
	指针类型
	
	空类型 void


	1) 所占字节数
	2) 存储区别
	3）不同类型的数据间进行转换(隐式，显式->强制类型转换)
	4）	特殊性：
			(1) 布尔型bool
			(2) float类型
			(3) char型是否有符号
			(4) 不同形式的0值: 0 '0'  "0" '\0'
			(5) 数据类型与后续代码中所使用的输入输出要相匹配（防止自相矛盾）


2、变量与常量

常量：在程序执行过程中值不会发生变化的量
		






